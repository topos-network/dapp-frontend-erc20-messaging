name: E2E tests

on:
  pull_request:
    branches: [main]

env:
  LOCAL_ERC20_MESSAGING_INFRA_VERSION: v0.1.0-alpha

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label ||
    github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    environment: devnet-1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pin@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # pin@v1

      - name: Checkout local-erc20-messaging-infra repo
        uses: actions/checkout@v3
        with:
          repository: topos-network/local-erc20-messaging-infra
          ref: ${{ env.LOCAL_ERC20_MESSAGING_INFRA_VERSION }}
          path: infra

      - name: Start containers
        run: >
          cd infra &&
          cat .env &&
          docker compose --profile executor-service up -d
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          TOKEN_DEPLOYER_SALT: ${{ secrets.TOKEN_DEPLOYER_SALT }}
          TOPOS_CORE_SALT: ${{ secrets.TOPOS_CORE_SALT }}
          TOPOS_CORE_PROXY_SALT: ${{ secrets.TOPOS_CORE_PROXY_SALT }}
          ERC20_MESSAGING_SALT: ${{ secrets.ERC20_MESSAGING_SALT }}
          SUBNET_REGISTRATOR_SALT: ${{ secrets.SUBNET_REGISTRATOR_SALT }}

      - name: Debug containers
        if: failure()
        run: docker inspect contracts-edena | grep Image && docker logs contracts-edena

      - name: Cache Docker layers
        uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # pin@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Run e2e tests
        run: |
          docker compose -f docker-compose.ci.yml up synpress
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          DOCKER_DEFAULT_PLATFORM: linux/amd64
          PORT: 3001
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_ISSUER_URL: ${{ secrets.AUTH0_ISSUER_URL }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          VITE_EXECUTOR_SERVICE_ENDPOINT: ${{ vars.VITE_EXECUTOR_SERVICE_ENDPOINT }}
          VITE_SUBNET_REGISTRATOR_CONTRACT_ADDRESS: ${{ vars.VITE_SUBNET_REGISTRATOR_CONTRACT_ADDRESS }}
          VITE_ERC20_MESSAGING_CONTRACT_ADDRESS: ${{ vars.VITE_ERC20_MESSAGING_CONTRACT_ADDRESS }}
          VITE_TOPOS_CORE_CONTRACT_ADDRESS: ${{ vars.VITE_TOPOS_CORE_CONTRACT_ADDRESS }}
          VITE_TOPOS_SUBNET_ENDPOINT: ${{ vars.VITE_TOPOS_SUBNET_ENDPOINT }}
          VITE_TRACING_OTEL_COLLECTOR_ENDPOINT: ${{ vars.VITE_TRACING_OTEL_COLLECTOR_ENDPOINT }}
          VITE_TRACING_SERVICE_NAME: ${{ vars.VITE_TRACING_SERVICE_NAME }}
          VITE_TRACING_SERVICE_VERSION: ${{ vars.VITE_TRACING_SERVICE_VERSION }}
